<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>ProFI-Pom</artifactId>
    <groupId>fr.proline</groupId>
    <version>0.3.0-SNAPSHOT</version> <!-- Snapshot Trunk version -->
  </parent>

  <artifactId>Proline-Admin-GUI</artifactId>
  <version>0.6.0-SNAPSHOT</version>

  <name>${project.artifactId}</name>
  <description>A GUI for Proline Administration</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <core.version>1.1.0-SNAPSHOT</core.version> <!-- Snapshot Trunk version -->
    <admin.version>0.6.0-SNAPSHOT</admin.version> <!-- Snapshot Trunk version -->
    <version.path>${basedir}/src/main/scala/fr/proline/admin/gui</version.path>
  </properties>
	<scm>
	  <connection>scm:svn:https://bioproj.extra.cea.fr/svn/proline/Proline-Admin-GUI/trunk</connection>
	</scm>
	
  <dependencies>

    <!-- Scala -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <!-- Version inherited from ProFI-Pom ${scala-library.version} -->
    </dependency>

    <!-- Scala FX -->
    <dependency>
      <groupId>org.scalafx</groupId>
      <artifactId>scalafx_${scala.version}</artifactId>
      <version>8.0.20-R6</version><!-- for JavaFX 8 -->
    </dependency>

    <!-- Logback -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <!-- Compile scope (Proline-Admin can be used as a stand-alone program) -->
    </dependency>
    <dependency>
      <groupId>com.typesafe.scala-logging</groupId>
      <artifactId>scala-logging_${scala.version}</artifactId>
      <!-- Version inherited from ProFI-Pom -->
    </dependency>

    <!-- Configuration -->
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.3.0</version>
    </dependency>

    <!-- Database drivers -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>

    <!-- Dependency problem with Hibernate : force antlr version 2.7.7 -->

    <!-- Proline -->
    <dependency>
      <groupId>fr.proline.util</groupId>
      <artifactId>ProFI-Commons-Scala</artifactId>
      <version>0.6.0-SNAPSHOT</version> <!-- Snapshot Trunk version -->
    </dependency>

    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-ORM</artifactId>
      <version>${core.version}</version>
    </dependency>

    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-Admin</artifactId>
      <version>${admin.version}</version>
    </dependency>

    <!-- Tests -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.version}</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <pluginManagement>
      <plugins>

        <!-- For Eclipse build -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.8,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>replacer</artifactId>
                    <versionRange>[1.5.2,)</versionRange>
                    <goals>
                      <goal>replace</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                      <runOnIncremental>false</runOnIncremental>
                    </execute>
                  </action>
                </pluginExecution>

              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->
        <configuration>
          <launchers>
            <launcher>
              <id>GUI</id>
              <mainClass>fr.proline.admin.gui.Main</mainClass>
              <!-- args are optional <args> <arg>arg1</arg> </args> -->
              <!-- jvmArgs are optional -->
              <jvmArgs>
                <jvmArg>-Xms512m</jvmArg>
                <jvmArg>-Xmx1024m</jvmArg>
                <jvmArg>-Duser.language=en</jvmArg>
                <jvmArg>-Djava.library.path=./lib</jvmArg>
              </jvmArgs>
            </launcher>
          </launchers>
        </configuration>
      </plugin>

      <!-- Deploy JavaFX-based executable JAR -->
      <plugin>
        <groupId>com.zenjava</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>8.1.2</version> <!--  for Java >= 8u20 -->
        <!-- <version>2.0</version> --> <!--  for Java <= 8u11 -->

        <executions>
          <execution>
            <id>create-final-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <vendor>ProFi</vendor>
          <mainClass>fr.proline.admin.gui.Main</mainClass>
          <jfxAppOutputDir>${project.build.directory}</jfxAppOutputDir> <!-- produce JFX jar in target folder -->
          <jfxMainAppJarName>${project.build.finalName}.jar</jfxMainAppJarName> <!-- override non-jfx jar -->

          <!-- <jvmArg>-Dlogback.configurationFile=config/logback.xml</jvmArg> -->
          <permissions>
            <permission>all-permissions</permission>
          </permissions>
        </configuration>

      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->
        <executions>

          <!-- Copy resources to 'target/config' near jar -->
          <execution>
            <id>copy-config</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/config</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <filtering>true</filtering>
                  <excludes>
                    <exclude>META-INF/**</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>

          <!-- Copy scripts to '/target' with jar -->
          <execution>
            <id>copy-scripts</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <encoding>UTF-8</encoding>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>scripts</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <!-- Is this plugin still used with assembly plugin ? ? -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->
        <executions>

          <!-- Copy external libs to '/lib' near jar on phase package -->

          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <includeTypes>jar</includeTypes>
              <excludeArtifactIds>Proline-Admin</excludeArtifactIds>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
          
          <execution>
            <id>copy-admin-jar</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <includeTypes>jar</includeTypes>
              <includeArtifactIds>Proline-Admin</includeArtifactIds>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
          
          <execution>
            <id>copy-dll</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <includeTypes>dll,exe</includeTypes>
              <stripVersion>true</stripVersion>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/assembly.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>


    <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>

        <executions>
          <execution>
            <phase>generate-sources</phase>
              <goals>
                <goal>replace</goal>
              </goals>
           </execution>
         </executions>

         <configuration>
           <file>${version.path}/Version.scala.template</file>
           <outputFile>${version.path}/Version.scala</outputFile>
           <replacements>
             <replacement>
               <token>@moduleName@</token>
               <value>${project.artifactId}</value>
             </replacement>
             <replacement>
               <token>@version@</token>
               <value>${project.version}_${maven.build.timestamp}_${user.name}</value>
             </replacement>
           </replacements>
         </configuration>

      </plugin>
      
     	  <!--  Maven Release for branches and tags -->
		<plugin>
			<artifactId>maven-release-plugin</artifactId>
			<version>2.5.1</version>
			<configuration>
				<providerImplementations>
					<svn>javasvn</svn>
				</providerImplementations>
			</configuration>
			<dependencies>
				<dependency>
					<groupId>com.google.code.maven-scm-provider-svnjava</groupId>
					<artifactId>maven-scm-provider-svnjava</artifactId>
					<version>2.1.1</version>
					<scope>compile</scope>
				</dependency>
			</dependencies>
		</plugin>
		      
     </plugins>
  </build>

</project>
