<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>proline-parent-admin</artifactId>
		<groupId>fr.proline</groupId>
		<version>2.2.1-SNAPSHOT</version>
	</parent>

	<artifactId>proline-admin-gui</artifactId>

	<name>Proline-Admin-GUI</name>
	<description>A GUI for Proline Administration</description>

	<properties>
		<version.path>${basedir}/src/main/scala/fr/proline/admin/gui</version.path>
	</properties>

	<dependencies>

		<!-- Scala -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<!-- Version inherited from parent Pom -->
		</dependency>

		<!-- Scala FX -->
		<dependency>
			<groupId>org.scalafx</groupId>
			<artifactId>scalafx_${scala.version}</artifactId>
			<version>8.0.102-R11</version><!-- for JavaFX 8 -->
		</dependency>

		<!-- Logback -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<!-- Version inherited from parent Pom -->
		</dependency>
		<dependency>
			<groupId>com.typesafe.scala-logging</groupId>
			<artifactId>scala-logging_${scala.version}</artifactId>
			<!-- Version inherited from parent Pom -->
		</dependency>

		<!-- Configuration -->
		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>config</artifactId>
			<!-- Version inherited from parent Pom -->
		</dependency>

		<!-- Database drivers -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<!-- Dependency problem with Hibernate : force antlr version 2.7.7 -->

		<!-- Proline -->
		<dependency>
			<groupId>fr.profi.util</groupId>
			<artifactId>profi-commons-scala_${scala.version}</artifactId>
		</dependency>

		<dependency>
			<groupId>fr.proline</groupId>
			<artifactId>proline-orm</artifactId>
			<version>${core.version}</version>
		</dependency>

		<dependency>
			<groupId>fr.proline</groupId>
			<artifactId>proline-admin</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.version}</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<pluginManagement>
			<plugins>

				<!-- For Eclipse build -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.8,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.google.code.maven-replacer-plugin</groupId>
										<artifactId>replacer</artifactId>
										<versionRange>[1.5.2,)</versionRange>
										<goals>
											<goal>replace</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<!-- Version inherited from ProFI-Pom -->
				<configuration>
					<launchers>
						<launcher>
							<id>GUI</id>
							<mainClass>fr.proline.admin.gui.Main</mainClass>
							<!-- args are optional <args> <arg>arg1</arg> </args> -->
							<!-- jvmArgs are optional -->
							<jvmArgs>
								<jvmArg>-Xms512m</jvmArg>
								<jvmArg>-Xmx1024m</jvmArg>
								<jvmArg>-Duser.language=en</jvmArg>
								<jvmArg>-Djava.library.path=./lib</jvmArg>
							</jvmArgs>
						</launcher>
					</launchers>
				</configuration>
			</plugin>

			<!-- Deploy JavaFX-based executable JAR -->
			<plugin>
				<groupId>com.zenjava</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>8.1.2</version> <!-- for Java >= 8u20 -->
				<!-- <version>2.0</version> --> <!-- for Java <= 8u11 -->

				<executions>
					<execution>
						<id>create-final-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<vendor>ProFi</vendor>
					<mainClass>fr.proline.admin.gui.Main</mainClass>
					<jfxAppOutputDir>${project.build.directory}</jfxAppOutputDir> <!-- produce JFX jar in target folder -->
					<jfxMainAppJarName>${project.build.finalName}.jar</jfxMainAppJarName> <!-- override non-jfx jar -->
					<allPermissions>true</allPermissions>
				</configuration>

			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<!-- Version inherited from ProFI-Pom -->
				<executions>

					<!-- Copy resources to 'target/config' near jar -->
					<execution>
						<id>copy-config</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/config</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>META-INF/**</exclude>
										<exclude>**/documentation/*.pdf</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>

					<!-- Copy scripts to '/target' with jar -->
					<execution>
						<id>copy-scripts</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>scripts</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<!-- Is this plugin still used with assembly plugin ? ? -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<!-- Version inherited from ProFI-Pom -->
				<executions>

					<!-- Copy external libs to '/lib' near jar on phase package -->

					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeTypes>jar</includeTypes>
							<excludeArtifactIds>Proline-Admin</excludeArtifactIds>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>

					<execution>
						<id>copy-admin-jar</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<includeTypes>jar</includeTypes>
							<includeArtifactIds>Proline-Admin</includeArtifactIds>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>

					<execution>
						<id>copy-dll</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeTypes>dll,exe</includeTypes>
							<stripVersion>true</stripVersion>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<!-- Version inherited from ProFI-Pom -->
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
					<finalName>${project.name}-${project.version}</finalName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<!-- Version & config inherited from ProFI-Pom -->
				<executions>
					<execution>
						<id>scala-version-generation</id>
						<phase>generate-sources</phase>
						<configuration>
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>

			</plugin>

			<!-- Maven Release for branches and tags -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<providerImplementations>
						<svn>javasvn</svn>
					</providerImplementations>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.google.code.maven-scm-provider-svnjava</groupId>
						<artifactId>maven-scm-provider-svnjava</artifactId>
						<version>2.1.1</version>
						<scope>compile</scope>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>

</project>
